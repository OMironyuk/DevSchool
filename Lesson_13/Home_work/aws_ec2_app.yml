---
- name: Create AWS EC2 Instance
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
  - name: Creatr a kay pair based on my ssh key
    ec2_key:
      name: id_rsa
      key_material: '{{ item }}'
    with_file: ~/.ssh/id_rsa.pub

  - name: Create securiy group with port 22 and 8080 open to 0.0.0.0/0
    ec2_group:
      name: EC2SecGroup
      description: security grop for build and prod instance
      region: eu-central-1
      rules:
        - proto: tcp
          ports:
            - 22
            - 8080
          cidr_ip: 0.0.0.0/0

  - name: Create EC2 instance
    ec2:
      instance_type: t2.micro
      image: ami-05f7491af5eef733a
      key_name: id_rsa
      wait: yes
      group: EC2SecGroup
      region: eu-central-1
      instance_tags:
        Name: build
      exact_count: 1
      count_tag:
        Name: build
    register: ec2_build

  - name: Create EC2 instance
    ec2:
      instance_type: t2.micro
      image: ami-05f7491af5eef733a
      key_name: id_rsa
      wait: yes
      group: EC2SecGroup
      region: eu-central-1
      instance_tags:
        Name: prod
      exact_count: 1
      count_tag:
        Name: prod
    register: ec2_prod

  - name: Add new instance to host group
    add_host:
      hostname: "{{ item.public_ip }}"
      groupname: build
    loop: "{{ ec2_build.tagged_instances }}"

  - name: Add new instance to host group
    add_host:
      hostname: "{{ item.public_ip }}"
      groupname: prod
    loop: "{{ ec2_prod.tagged_instances }}"

  - name: Wait for ssh server to be running on build_instance
    wait_for:
      host: "{{ item.public_ip }}"
      port: 22
      search_regex: OpenSSH
    loop: "{{ ec2_build.tagged_instances | union (ec2_prod.tagged_instances)}}"

  - name: "Retrieve an authentication token"
    command: "aws ecr get-login-password --region eu-central-1"
    register: awsrepo


- name: Create build image
  hosts: build
  remote_user: ubuntu
  become: yes

  tasks:
  - name: Ensure required packages is present
    apt:
      name:
        - python3
        - python3-pip
        - docker.io
      state: present
      update_cache: yes

  - name: Enshure Docker SDK for Python is present
    pip:
      name: docker
      state: present

  - name: Create build directory
    file:
      path: /home/user/build-image
      state: directory

  - name: Copy Dockerfile
    copy:
      src: ./build-image/Dockerfile
      dest: /home/user/build-image/

  - name: docker login
    docker_login:
      registry_url: 374296183065.dkr.ecr.eu-central-1.amazonaws.com
      username: AWS
      password: "{{hostvars['localhost']['awsrepo'].stdout}}"

  - name: Create ECR repository
    ecs_ecr:
      name: solitaire

  - name: Build an image
    docker_image:
      path: /home/user/build-image/
      name: 374296183065.dkr.ecr.eu-central-1.amazonaws.com/solitaire:v1
      push: yes

- name: Create build image
  hosts: prod
  remote_user: ubuntu
  become: yes

  tasks:
  - name: Ensure required packages is present
    apt:
      name:
        - python3
        - python3-pip
        - docker.io
      state: present
      update_cache: yes

  - name: Enshure Docker SDK for Python is present
    pip:
      name: docker
      state: present

  - name: Docker login
    docker_login:
      registry_url: 374296183065.dkr.ecr.eu-central-1.amazonaws.com
      username: AWS
      password: "{{hostvars['localhost']['awsrepo'].stdout}}"

  - name: Run container
    docker_container:
      name: solitaire
      image: 374296183065.dkr.ecr.eu-central-1.amazonaws.com/solitaire:v1
      ports:
        - "8080:8080"
      state: started
