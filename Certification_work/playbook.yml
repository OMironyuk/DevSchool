---
- name: Preparing for connection to ec2_instances
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
  - name: Wait for ssh server to be running on created instances
    wait_for:
      host: "{{ item }}"
      port: 22
      search_regex: OpenSSH
    loop: "{{ groups['build'] | union (groups['stage'])}}"

  - name: Retrieve an authentication token
    command: "aws ecr get-login-password --region {{aws_region}}"
    register: awsrepo

  - name: Get the current caller identity information
    aws_caller_info:
    register: caller_info

  - name: Save full name of repository
    set_fact:
      repo_name: "{{caller_info.account}}.dkr.ecr.{{aws_region}}.amazonaws.com"

  - name: Create ECR repository
    ecs_ecr:
      name: sudoku

- name: Create build environment
  hosts: build
  remote_user: ubuntu
  become: yes
  gather_facts: false

  tasks:
  - name: Ensure required packages are present
    apt:
      name:
        - python3
        - python3-pip
        - docker.io
      state: present
      update_cache: yes

  - name: Enshure Docker SDK for Python is present
    pip:
      name:
        - docker
      state: present

  - name: Create build directory
    file:
      path: /home/user/build-image
      state: directory

  - name: Copy Dockerfile
    copy:
      src: ./Dockerfile
      dest: /home/user/build-image/

  - name: Login to Amazon ECR
    docker_login:
      registry_url:  "{{hostvars['localhost'].repo_name}}"
      username: AWS
      password: "{{hostvars['localhost']['awsrepo'].stdout}}"

  - name: Build image and push to repository
    docker_image:
      path: /home/user/build-image/
      name: "{{hostvars['localhost'].repo_name}}/sudoku:v1"
      push: yes

- name: Create stage environment
  hosts: stage
  remote_user: ubuntu
  become: yes
  gather_facts: false

  tasks:
  - name: Ensure required packages are present
    apt:
      name:
        - python3
        - python3-pip
        - docker.io
      state: present
      update_cache: yes

  - name: Enshure Docker SDK for Python is present
    pip:
      name: docker
      state: present

  - name: Login to Amazon ECR
    docker_login:
      registry_url: "{{hostvars['localhost'].repo_name}}"
      username: AWS
      password: "{{hostvars['localhost']['awsrepo'].stdout}}"

  - name: Run container
    docker_container:
      name: sudoku
      image: "{{hostvars['localhost'].repo_name}}/sudoku:v1"
      ports:
        - "8080:8080"
      state: started
